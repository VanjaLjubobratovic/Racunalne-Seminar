The first workflow is also the easiest one: You want to use Mercurial to be able to look back when you did which changes.

Prepare Mercurial

As first step, you should teach Mercurial your name. For that you open the file ~/.hgrc (or mercurial.ini in your home directory for Windows) with a text-editor and add the ui section (user interaction) with your username:

[ui]
username = Mr. Johnson <johnson@smith.com>


Initialize the project

Now you add a new folder in which you want to work:

$ hg init project

Add files and track them

Enter the project folder, create some files, then add and commit them.

$ cd project
$ echo 'print("Hello")' > hello.py
$ hg add
$ hg commit
(your default editor opens,
 enter the commit message,
 save and close.)

output of hg add: adding hello.py

display of hg commit (with your message): 
Initial commit. 
HG: Enter commit message. Lines beginning with 'HG:' are removed. 
HG: Leave message empty to abort commit. 
HG: -- 
HG: user: Mr. Johnson <johnson@smith.com> 
HG: branch 'default' 
HG: added hello.py

You can then look into your initial history with hg log:

$ hg log


You can also go into an existing directory with files and init the repository there.

$ cd project
$ hg init

Also you can add only specific files instead of all files in the directory. Mercurial will then track only these files and won't know about the others. The following tells mercurial to track all files whose names begin with "file0" as well as file10, file11 and file12.

$ hg add file0* file10 file11 file12


see which files changed, which have been added or removed, and which aren't tracked yet

$ hg status


see the exact changes

$ hg diff


commit the changes.

$ hg commit

Linkovi:
https://confluence.atlassian.com/get-started-with-bitbucket/git-and-mercurial-commands-860009656.html
https://www.mercurial-scm.org/guide
